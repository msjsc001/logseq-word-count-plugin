import { LSPluginUser } from '../LSPlugin.user';
import { PluginLocal } from '../LSPlugin.core';
/**
 * WARN: These are some experience features and may be adjusted at any time.
 * These unofficial plugins that use these APIs are temporarily
 * not supported on the Marketplace.
 */
export declare class LSPluginExperiments {
    private ctx;
    constructor(ctx: LSPluginUser);
    get React(): unknown;
    get ReactDOM(): unknown;
    get pluginLocal(): PluginLocal;
    invokeExperMethod(type: string, ...args: Array<any>): any;
    loadScripts(...scripts: Array<string>): Promise<void>;
    registerFencedCodeRenderer(type: string, opts: {
        edit?: boolean;
        before?: () => Promise<void>;
        subs?: Array<string>;
        render: (props: {
            content: string;
        }) => any;
    }): any;
    registerExtensionsEnhancer<T = any>(type: 'katex' | 'codemirror', enhancer: (v: T) => Promise<any>): any;
    ensureHostScope(): any;
}
